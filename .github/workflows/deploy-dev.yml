name: Deploy to Development Environment

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  _PROJECT_NAME: "k8s-service-check"
  _SERVICE_NAME: "k8s-service-check"
  _NAME_SPACE: "default"
  _ENV: "-dev"
  _REGISTRY_DEF: "sample"
  K8S_CLUSTER_NAME: skcc-newkm-dev-aks

  _DOCKER_FILE_NAME: "Dockerfile"
  REGISTRY: newkmacr.azurecr.io
  IMAGE_NAME: "k8s-service-check"
  IMAGE_TAG: "1.0.0-SNAPSHOT"


jobs:
  build-and-push:
    runs-on: newkm-selfhost    # GitHub-hosted runner 사용
    permissions:
      contents: read
      packages: write
          
    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Set Image Tag
      run: |
        echo "IMAGE_TAG=${DEFAULT_IMAGE_TAG}.$(date +'%Y%m%d').${{ github.run_number }}" >> $GITHUB_ENV

    - name: Build with Maven
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mvn -s ~/.m2/settings.xml deploy
        mvn -s ~/.m2/settings.xml clean package


    - name: Azure Container Registry 로그인
      uses: azure/docker-login@v2
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
      
    - name: Pull latest image for caching
      run: |
        docker pull ${{ env.REGISTRY }}/${{ env._SERVICE_NAME }}:latest || true
        DOCKER_BUILDKIT=1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        cache-from: |
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        cache-to: type=inline        

    # 다음 job에서 사용할 이미지 태그를 outputs으로 저장
    outputs:
      image_tag: ${{ env.IMAGE_TAG }}

  deploy-to-aks:
    needs: build-and-push    # 이전 job이 완료된 후 실행
    runs-on: newkm-selfhost      # Self-hosted runner 사용
    
    steps:
    - uses: actions/checkout@v3

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash


    - name: Configure AKS Credentials
      uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RESOURCE_GROUP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: Deploy to AKS
      run: |
        helm upgrade --install ${{ env._SERVICE_NAME }} helm \
          -f helm/values${{ env._ENV }}.yaml \
          --namespace ${{ env._NAME_SPACE }} \
          --set image.repository=${{ env.ACR_NAME }}.azurecr.io/${{ env._REGISTRY_DEF }}/${{ env._SERVICE_NAME }} \
          --set image.tag=${{ needs.build-and-push.outputs.image_tag }}

