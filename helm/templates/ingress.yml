apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.fullnameOverride }}
  annotations:
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"    
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/rewrite-target: /checkutil/$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/use-regex: "true"
  labels:
    app: {{ .Values.fullnameOverride }}
spec:
  ingressClassName: nginx
  rules:
    # - host: {{ .Values.ingress.host }}
    #   http:
    #     paths:
    #       - path: /(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: {{ .Values.fullnameOverride }}
    #             port:
    #               number:  {{ .Values.ingress.port }}
    #       - path: /template(.*)
    #         pathType: Prefix
    #         backend:
    #           service:
    #             name: {{ .Values.fullnameOverride }}
    #             port:
    #               number:  {{ .Values.ingress.port }}
    - host: {{ .Values.ingress.host }}
      http:
        paths:
          - path: /checkutil(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.fullnameOverride }}
                port:
                  number: {{ .Values.ingress.port }}
